{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rong\\\\file-upload-app\\\\src\\\\components\\\\FileUpload.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  const [files, setFiles] = useState < FileList | null > null;\n  const [status, setStatus] = useState < \"initial\" | \"uploading\" | \"success\" | \"fail\" > \"initial\";\n  const handleFileChange = e => {\n    if (e.target.files) {\n      setStatus(\"initial\");\n      setFiles(e.target.files);\n    }\n  };\n  const handleUpload = async () => {\n    if (files) {\n      setStatus(\"uploading\");\n      const formData = new FormData();\n      [...files].forEach(file => {\n        formData.append(\"files\", file);\n      });\n      try {\n        const result = await fetch(\"https://httpbin.org/post\", {\n          method: \"POST\",\n          body: formData\n        });\n        const data = await result.json();\n        console.log(data);\n        setStatus(\"success\");\n      } catch (error) {\n        console.error(error);\n        setStatus(\"fail\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-primary text-white text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Multiple File Uploader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file\",\n                className: \"sr-only\",\n                children: \"Choose files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"file\",\n                type: \"file\",\n                multiple: true,\n                onChange: handleFileChange,\n                className: \"form-control-file\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), files && [...files].map((file, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"File number \", index + 1, \" details:\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-unstyled\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Name: \", file.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Type: \", file.type]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Size: \", file.size, \" bytes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this)]\n            }, file.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)), files && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpload,\n              className: \"btn btn-primary\",\n              children: [\"Upload \", files.length > 1 ? \"files\" : \"a file\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Result, {\n              status: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = FileUpload;\nconst Result = ({\n  status\n}) => {\n  if (status === \"success\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-success\",\n      children: \"\\u2705 Uploaded successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this);\n  } else if (status === \"fail\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: \"\\u274C Upload failed!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  } else if (status === \"uploading\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-info\",\n      children: \"\\u23F3 Uploading started...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  } else {\n    return null;\n  }\n};\n_c2 = Result;\nexport default FileUpload;\nvar _c, _c2;\n$RefreshReg$(_c, \"FileUpload\");\n$RefreshReg$(_c2, \"Result\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","files","setFiles","FileList","status","setStatus","handleFileChange","e","target","handleUpload","formData","FormData","forEach","file","append","result","fetch","method","body","data","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","multiple","onChange","map","index","name","size","onClick","length","Result","_c","_c2","$RefreshReg$"],"sources":["C:/Users/rong/file-upload-app/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst FileUpload = () => {\r\n  const [files, setFiles] = (useState < FileList) | (null > null);\r\n  const [status, setStatus] =\r\n    (useState < \"initial\") | \"uploading\" | \"success\" | (\"fail\" > \"initial\");\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      setStatus(\"initial\");\r\n      setFiles(e.target.files);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (files) {\r\n      setStatus(\"uploading\");\r\n\r\n      const formData = new FormData();\r\n      [...files].forEach((file) => {\r\n        formData.append(\"files\", file);\r\n      });\r\n\r\n      try {\r\n        const result = await fetch(\"https://httpbin.org/post\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n\r\n        const data = await result.json();\r\n        console.log(data);\r\n        setStatus(\"success\");\r\n      } catch (error) {\r\n        console.error(error);\r\n        setStatus(\"fail\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header bg-primary text-white text-center\">\r\n              <h1>Multiple File Uploader</h1>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"file\" className=\"sr-only\">\r\n                  Choose files\r\n                </label>\r\n                <input\r\n                  id=\"file\"\r\n                  type=\"file\"\r\n                  multiple\r\n                  onChange={handleFileChange}\r\n                  className=\"form-control-file\"\r\n                />\r\n              </div>\r\n              {files &&\r\n                [...files].map((file, index) => (\r\n                  <section key={file.name}>\r\n                    <h5>File number {index + 1} details:</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                      <li>Name: {file.name}</li>\r\n                      <li>Type: {file.type}</li>\r\n                      <li>Size: {file.size} bytes</li>\r\n                    </ul>\r\n                  </section>\r\n                ))}\r\n              {files && (\r\n                <button onClick={handleUpload} className=\"btn btn-primary\">\r\n                  Upload {files.length > 1 ? \"files\" : \"a file\"}\r\n                </button>\r\n              )}\r\n              <Result status={status} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Result = ({ status }: { status: string }) => {\r\n  if (status === \"success\") {\r\n    return <p className=\"text-success\">✅ Uploaded successfully!</p>;\r\n  } else if (status === \"fail\") {\r\n    return <p className=\"text-danger\">❌ Upload failed!</p>;\r\n  } else if (status === \"uploading\") {\r\n    return <p className=\"text-info\">⏳ Uploading started...</p>;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}