{"ast":null,"code":"const BASE_URL = \"http://localhost:8000/api\"; // Replace with your backend API base URL\n\nexport const updateFiles = async (userName, files, setUpdateStatus, setFiles) => {\n  try {\n    setUpdateStatus(\"updating\");\n    const formData = new FormData();\n    formData.append(\"userName\", userName);\n    Array.from(files).forEach(file => formData.append(\"files\", file));\n    const response = await fetch(`${BASE_URL}/update-files/`, {\n      method: \"PUT\",\n      body: formData\n    });\n    if (response.ok) {\n      setFiles(null);\n      setUpdateStatus(\"success\");\n    } else {\n      setUpdateStatus(\"fail\");\n    }\n  } catch (error) {\n    console.error(\"Update failed:\", error);\n    setUpdateStatus(\"fail\");\n  }\n};","map":{"version":3,"names":["BASE_URL","updateFiles","userName","files","setUpdateStatus","setFiles","formData","FormData","append","Array","from","forEach","file","response","fetch","method","body","ok","error","console"],"sources":["C:/Users/rong/file-upload-app/src/services/updateFiles.js"],"sourcesContent":["const BASE_URL = \"http://localhost:8000/api\"; // Replace with your backend API base URL\r\n\r\nexport const updateFiles = async (\r\n  userName,\r\n  files,\r\n  setUpdateStatus,\r\n  setFiles\r\n) => {\r\n  try {\r\n    setUpdateStatus(\"updating\");\r\n    const formData = new FormData();\r\n    formData.append(\"userName\", userName);\r\n    Array.from(files).forEach((file) => formData.append(\"files\", file));\r\n\r\n    const response = await fetch(`${BASE_URL}/update-files/`, {\r\n      method: \"PUT\",\r\n      body: formData,\r\n    });\r\n\r\n    if (response.ok) {\r\n      setFiles(null);\r\n      setUpdateStatus(\"success\");\r\n    } else {\r\n      setUpdateStatus(\"fail\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Update failed:\", error);\r\n    setUpdateStatus(\"fail\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B,CAAC,CAAC;;AAE9C,OAAO,MAAMC,WAAW,GAAG,MAAAA,CACzBC,QAAQ,EACRC,KAAK,EACLC,eAAe,EACfC,QAAQ,KACL;EACH,IAAI;IACFD,eAAe,CAAC,UAAU,CAAC;IAC3B,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEN,QAAQ,CAAC;IACrCO,KAAK,CAACC,IAAI,CAACP,KAAK,CAAC,CAACQ,OAAO,CAAEC,IAAI,IAAKN,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEI,IAAI,CAAC,CAAC;IAEnE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGd,QAAQ,gBAAgB,EAAE;MACxDe,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEV;IACR,CAAC,CAAC;IAEF,IAAIO,QAAQ,CAACI,EAAE,EAAE;MACfZ,QAAQ,CAAC,IAAI,CAAC;MACdD,eAAe,CAAC,SAAS,CAAC;IAC5B,CAAC,MAAM;MACLA,eAAe,CAAC,MAAM,CAAC;IACzB;EACF,CAAC,CAAC,OAAOc,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtCd,eAAe,CAAC,MAAM,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}