{"ast":null,"code":"export const handleUpload=async(userName,files,setStatus,setFiles)=>{if(files&&userName){setStatus(\"uploading\");const formData=new FormData();formData.append(\"user_name\",userName);Array.from(files).forEach(file=>{formData.append(\"file\",file);});try{const response=await fetch(\"http://localhost:8000/api/files/\",{method:\"POST\",body:formData});const data=await response.json();// Parse response body as JSON\nif(response.ok){setStatus(\"success\");setFiles(null);// Clear files after successful upload\n}else{setStatus(\"fail\");console.error(\"Upload failed:\",data.message);}}catch(error){console.error(error);setStatus(\"fail\");}}};","map":{"version":3,"names":["handleUpload","userName","files","setStatus","setFiles","formData","FormData","append","Array","from","forEach","file","response","fetch","method","body","data","json","ok","console","error","message"],"sources":["C:/Users/rong/file-upload-app/src/services/handleUpload.js"],"sourcesContent":["export const handleUpload = async (userName, files, setStatus, setFiles) => {\r\n  if (files && userName) {\r\n    setStatus(\"uploading\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"user_name\", userName);\r\n    Array.from(files).forEach((file) => {\r\n      formData.append(\"file\", file);\r\n    });\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/api/files/\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json(); // Parse response body as JSON\r\n\r\n      if (response.ok) {\r\n        setStatus(\"success\");\r\n        setFiles(null); // Clear files after successful upload\r\n      } else {\r\n        setStatus(\"fail\");\r\n        console.error(\"Upload failed:\", data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setStatus(\"fail\");\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,YAAY,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,KAAK,CAAEC,SAAS,CAAEC,QAAQ,GAAK,CAC1E,GAAIF,KAAK,EAAID,QAAQ,CAAE,CACrBE,SAAS,CAAC,WAAW,CAAC,CAEtB,KAAM,CAAAE,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,CAAEN,QAAQ,CAAC,CACtCO,KAAK,CAACC,IAAI,CAACP,KAAK,CAAC,CAACQ,OAAO,CAAEC,IAAI,EAAK,CAClCN,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEI,IAAI,CAAC,CAC/B,CAAC,CAAC,CACF,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,kCAAkC,CAAE,CAC/DC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEV,QACR,CAAC,CAAC,CAEF,KAAM,CAAAW,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAE;AAEpC,GAAIL,QAAQ,CAACM,EAAE,CAAE,CACff,SAAS,CAAC,SAAS,CAAC,CACpBC,QAAQ,CAAC,IAAI,CAAC,CAAE;AAClB,CAAC,IAAM,CACLD,SAAS,CAAC,MAAM,CAAC,CACjBgB,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAEJ,IAAI,CAACK,OAAO,CAAC,CAC/C,CACF,CAAE,MAAOD,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC,CACpBjB,SAAS,CAAC,MAAM,CAAC,CACnB,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}