{"ast":null,"code":"const BASE_URL=\"http://localhost:8000/api\";// Replace with your backend API base URL\nexport const deleteFile=async(userName,fileName,setDeleteStatus)=>{try{const response=await fetch(\"\".concat(BASE_URL,\"/delete-files/\"),{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({user_name:userName,files_to_delete:fileName// Assuming fileName is a string or array of file names to delete\n})});if(response.ok){const data=await response.json();console.log(\"Delete successful:\",data.message);setDeleteStatus(\"success\");}else{const data=await response.json();console.error(\"Delete failed:\",data.message);setDeleteStatus(\"fail\");}}catch(error){console.error(\"Delete failed:\",error);setDeleteStatus(\"fail\");}};","map":{"version":3,"names":["BASE_URL","deleteFile","userName","fileName","setDeleteStatus","response","fetch","concat","method","headers","body","JSON","stringify","user_name","files_to_delete","ok","data","json","console","log","message","error"],"sources":["C:/Users/rong/file-upload-app/src/services/deleteFile.js"],"sourcesContent":["const BASE_URL = \"http://localhost:8000/api\"; // Replace with your backend API base URL\r\n\r\nexport const deleteFile = async (userName, fileName, setDeleteStatus) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/delete-files/`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user_name: userName,\r\n        files_to_delete: fileName, // Assuming fileName is a string or array of file names to delete\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      console.log(\"Delete successful:\", data.message);\r\n      setDeleteStatus(\"success\");\r\n    } else {\r\n      const data = await response.json();\r\n      console.error(\"Delete failed:\", data.message);\r\n      setDeleteStatus(\"fail\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Delete failed:\", error);\r\n    setDeleteStatus(\"fail\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAG,2BAA2B,CAAE;AAE9C,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,QAAQ,CAAEC,eAAe,GAAK,CACvE,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIP,QAAQ,mBAAkB,CACxDQ,MAAM,CAAE,QAAQ,CAChBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,SAAS,CAAEX,QAAQ,CACnBY,eAAe,CAAEX,QAAU;AAC7B,CAAC,CACH,CAAC,CAAC,CAEF,GAAIE,QAAQ,CAACU,EAAE,CAAE,CACf,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAX,QAAQ,CAACY,IAAI,CAAC,CAAC,CAClCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEH,IAAI,CAACI,OAAO,CAAC,CAC/ChB,eAAe,CAAC,SAAS,CAAC,CAC5B,CAAC,IAAM,CACL,KAAM,CAAAY,IAAI,CAAG,KAAM,CAAAX,QAAQ,CAACY,IAAI,CAAC,CAAC,CAClCC,OAAO,CAACG,KAAK,CAAC,gBAAgB,CAAEL,IAAI,CAACI,OAAO,CAAC,CAC7ChB,eAAe,CAAC,MAAM,CAAC,CACzB,CACF,CAAE,MAAOiB,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtCjB,eAAe,CAAC,MAAM,CAAC,CACzB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}