{"ast":null,"code":"// api.js\n\nconst BASE_URL = \"http://localhost:8000/api\"; // Replace with your backend API base URL\n\nexport const handleUpload = async (userName, files, setStatus, setFiles) => {\n  if (files && userName) {\n    setStatus(\"uploading\");\n    const formData = new FormData();\n    formData.append(\"user_name\", userName);\n    Array.from(files).forEach(file => {\n      formData.append(\"file\", file);\n    });\n    try {\n      const response = await fetch(\"http://localhost:8000/api/files/\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json(); // Parse response body as JSON\n\n      if (response.ok) {\n        setStatus(\"success\");\n        setFiles(null); // Clear files after successful upload\n      } else {\n        setStatus(\"fail\");\n        console.error(\"Upload failed:\", data.message);\n      }\n    } catch (error) {\n      console.error(error);\n      setStatus(\"fail\");\n    }\n  }\n};\nexport const updateFiles = async (userName, files, setStatus, setFiles) => {\n  if (files && userName) {\n    setStatus(\"updating\");\n    const formData = new FormData();\n    formData.append(\"user_name\", userName);\n    Array.from(files).forEach(file => {\n      formData.append(\"file\", file);\n    });\n    try {\n      const response = await fetch(`${BASE_URL}/files/`, {\n        method: \"update\",\n        body: formData\n      });\n      return response;\n    } catch (error) {\n      console.error(\"Failed to upload files:\", error);\n      throw error; // Handle error in calling component\n    }\n  }\n};\nexport const getFileList = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/files/`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Failed to fetch file list:\", error);\n    throw error; // Handle error in calling component\n  }\n};\nexport const deleteFile = async fileId => {\n  try {\n    const response = await fetch(`${BASE_URL}/files/${fileId}`, {\n      method: \"DELETE\"\n    });\n    return response;\n  } catch (error) {\n    console.error(\"Failed to delete file:\", error);\n    throw error; // Handle error in calling component\n  }\n};","map":{"version":3,"names":["BASE_URL","handleUpload","userName","files","setStatus","setFiles","formData","FormData","append","Array","from","forEach","file","response","fetch","method","body","data","json","ok","console","error","message","updateFiles","getFileList","deleteFile","fileId"],"sources":["C:/Users/rong/file-upload-app/src/services/api.js"],"sourcesContent":["// api.js\r\n\r\nconst BASE_URL = \"http://localhost:8000/api\"; // Replace with your backend API base URL\r\n\r\nexport const handleUpload = async (userName, files, setStatus, setFiles) => {\r\n  if (files && userName) {\r\n    setStatus(\"uploading\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"user_name\", userName);\r\n    Array.from(files).forEach((file) => {\r\n      formData.append(\"file\", file);\r\n    });\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/api/files/\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json(); // Parse response body as JSON\r\n\r\n      if (response.ok) {\r\n        setStatus(\"success\");\r\n        setFiles(null); // Clear files after successful upload\r\n      } else {\r\n        setStatus(\"fail\");\r\n        console.error(\"Upload failed:\", data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setStatus(\"fail\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const updateFiles = async (userName, files, setStatus, setFiles) => {\r\n  if (files && userName) {\r\n    setStatus(\"updating\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"user_name\", userName);\r\n    Array.from(files).forEach((file) => {\r\n      formData.append(\"file\", file);\r\n    });\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/files/`, {\r\n        method: \"update\",\r\n        body: formData,\r\n      });\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error(\"Failed to upload files:\", error);\r\n      throw error; // Handle error in calling component\r\n    }\r\n  }\r\n};\r\n\r\nexport const getFileList = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/files/`);\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch file list:\", error);\r\n    throw error; // Handle error in calling component\r\n  }\r\n};\r\n\r\nexport const deleteFile = async (fileId) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/files/${fileId}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Failed to delete file:\", error);\r\n    throw error; // Handle error in calling component\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}