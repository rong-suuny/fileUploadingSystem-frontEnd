{"ast":null,"code":"export const updateFiles=async(userName,file,setStatus,setFiles)=>{if(file&&userName){setStatus(\"updating\");const formData=new FormData();formData.append(\"user_name\",userName);Array.from(file).forEach(file=>{formData.append(\"file\",file);});try{const response=await fetch(\"http://localhost:8000/api/files/file-update/\",{method:\"PUT\",body:formData});const data=await response.json();// Parse response body as JSON\nif(response.ok){setStatus(\"success\");setFiles(null);// Clear files after successful upload\n}else{setStatus(\"fail\");console.error(\"Upload failed:\",data.message);}}catch(error){console.error(error);setStatus(\"fail\");}}};","map":{"version":3,"names":["updateFiles","userName","file","setStatus","setFiles","formData","FormData","append","Array","from","forEach","response","fetch","method","body","data","json","ok","console","error","message"],"sources":["C:/Users/rong/file-upload-app/src/services/updateFiles.js"],"sourcesContent":["export const updateFiles = async (userName, file, setStatus, setFiles) => {\r\n  if (file && userName) {\r\n    setStatus(\"updating\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"user_name\", userName);\r\n    Array.from(file).forEach((file) => {\r\n      formData.append(\"file\", file);\r\n    });\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8000/api/files/file-update/`,\r\n        {\r\n          method: \"PUT\",\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      const data = await response.json(); // Parse response body as JSON\r\n\r\n      if (response.ok) {\r\n        setStatus(\"success\");\r\n        setFiles(null); // Clear files after successful upload\r\n      } else {\r\n        setStatus(\"fail\");\r\n        console.error(\"Upload failed:\", data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setStatus(\"fail\");\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,WAAW,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,IAAI,CAAEC,SAAS,CAAEC,QAAQ,GAAK,CACxE,GAAIF,IAAI,EAAID,QAAQ,CAAE,CACpBE,SAAS,CAAC,UAAU,CAAC,CAErB,KAAM,CAAAE,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,CAAEN,QAAQ,CAAC,CACtCO,KAAK,CAACC,IAAI,CAACP,IAAI,CAAC,CAACQ,OAAO,CAAER,IAAI,EAAK,CACjCG,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEL,IAAI,CAAC,CAC/B,CAAC,CAAC,CACF,GAAI,CACF,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAC,KAAK,gDAE1B,CACEC,MAAM,CAAE,KAAK,CACbC,IAAI,CAAET,QACR,CACF,CAAC,CAED,KAAM,CAAAU,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAE;AAEpC,GAAIL,QAAQ,CAACM,EAAE,CAAE,CACfd,SAAS,CAAC,SAAS,CAAC,CACpBC,QAAQ,CAAC,IAAI,CAAC,CAAE;AAClB,CAAC,IAAM,CACLD,SAAS,CAAC,MAAM,CAAC,CACjBe,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAEJ,IAAI,CAACK,OAAO,CAAC,CAC/C,CACF,CAAE,MAAOD,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC,CACpBhB,SAAS,CAAC,MAAM,CAAC,CACnB,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}